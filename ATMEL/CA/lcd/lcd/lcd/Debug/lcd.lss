
lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000224  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800100  00800100  00000224  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000254  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c88  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008fa  00000000  00000000  00000fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c9  00000000  00000000  000018a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  00001d6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ca  00000000  00000000  00001eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000414  00000000  00000000  00002382  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002796  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	58 c0       	rjmp	.+176    	; 0xf2 <__vector_16>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a9 30       	cpi	r26, 0x09	; 9
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	7a d0       	rcall	.+244    	; 0x19e <main>
  aa:	80 c0       	rjmp	.+256    	; 0x1ac <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <delay>:

void init_dust()
{
	sei();
	sbi(TCCR0, CS02);
	sbi(TIMSK, TOIE0); //timer interrupt enable
  ae:	99 23       	and	r25, r25
  b0:	6c f0       	brlt	.+26     	; 0xcc <delay+0x1e>
  b2:	20 e0       	ldi	r18, 0x00	; 0
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	ef e9       	ldi	r30, 0x9F	; 159
  b8:	ff e0       	ldi	r31, 0x0F	; 15
  ba:	31 97       	sbiw	r30, 0x01	; 1
  bc:	f1 f7       	brne	.-4      	; 0xba <delay+0xc>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <delay+0x12>
  c0:	00 00       	nop
  c2:	2f 5f       	subi	r18, 0xFF	; 255
  c4:	3f 4f       	sbci	r19, 0xFF	; 255
  c6:	82 17       	cp	r24, r18
  c8:	93 07       	cpc	r25, r19
  ca:	ac f7       	brge	.-22     	; 0xb6 <delay+0x8>
  cc:	08 95       	ret

000000ce <E_pulse>:
  ce:	a9 9a       	sbi	0x15, 1	; 21
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	ec df       	rcall	.-40     	; 0xae <delay>
  d6:	a9 98       	cbi	0x15, 1	; 21
  d8:	08 95       	ret

000000da <command_set>:
  da:	a8 98       	cbi	0x15, 0	; 21
  dc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
  e0:	f6 cf       	rjmp	.-20     	; 0xce <E_pulse>
  e2:	08 95       	ret

000000e4 <init_lcd>:
  e4:	88 e3       	ldi	r24, 0x38	; 56
  e6:	f9 df       	rcall	.-14     	; 0xda <command_set>
  e8:	8f e0       	ldi	r24, 0x0F	; 15
  ea:	f7 df       	rcall	.-18     	; 0xda <command_set>
  ec:	86 e0       	ldi	r24, 0x06	; 6
  ee:	f5 cf       	rjmp	.-22     	; 0xda <command_set>
  f0:	08 95       	ret

000000f2 <__vector_16>:
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	2f 93       	push	r18
  fe:	3f 93       	push	r19
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
 104:	af 93       	push	r26
 106:	bf 93       	push	r27
 108:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <timer0_millis>
 10c:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <timer0_millis+0x1>
 110:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <timer0_millis+0x2>
 114:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <timer0_millis+0x3>
 118:	30 91 00 01 	lds	r19, 0x0100	; 0x800100 <_edata>
 11c:	23 e0       	ldi	r18, 0x03	; 3
 11e:	23 0f       	add	r18, r19
 120:	2d 37       	cpi	r18, 0x7D	; 125
 122:	20 f4       	brcc	.+8      	; 0x12c <__vector_16+0x3a>
 124:	01 96       	adiw	r24, 0x01	; 1
 126:	a1 1d       	adc	r26, r1
 128:	b1 1d       	adc	r27, r1
 12a:	05 c0       	rjmp	.+10     	; 0x136 <__vector_16+0x44>
 12c:	26 e8       	ldi	r18, 0x86	; 134
 12e:	23 0f       	add	r18, r19
 130:	02 96       	adiw	r24, 0x02	; 2
 132:	a1 1d       	adc	r26, r1
 134:	b1 1d       	adc	r27, r1
 136:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
 13a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <timer0_millis>
 13e:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <timer0_millis+0x1>
 142:	a0 93 03 01 	sts	0x0103, r26	; 0x800103 <timer0_millis+0x2>
 146:	b0 93 04 01 	sts	0x0104, r27	; 0x800104 <timer0_millis+0x3>
 14a:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <timer0_overflow_count>
 14e:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <timer0_overflow_count+0x1>
 152:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <timer0_overflow_count+0x2>
 156:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <timer0_overflow_count+0x3>
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	a1 1d       	adc	r26, r1
 15e:	b1 1d       	adc	r27, r1
 160:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <timer0_overflow_count>
 164:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <timer0_overflow_count+0x1>
 168:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <timer0_overflow_count+0x2>
 16c:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <timer0_overflow_count+0x3>
 170:	bf 91       	pop	r27
 172:	af 91       	pop	r26
 174:	9f 91       	pop	r25
 176:	8f 91       	pop	r24
 178:	3f 91       	pop	r19
 17a:	2f 91       	pop	r18
 17c:	0f 90       	pop	r0
 17e:	0f be       	out	0x3f, r0	; 63
 180:	0f 90       	pop	r0
 182:	1f 90       	pop	r1
 184:	18 95       	reti

00000186 <millis>:
 186:	2f b7       	in	r18, 0x3f	; 63
 188:	f8 94       	cli
 18a:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <timer0_millis>
 18e:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <timer0_millis+0x1>
 192:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <timer0_millis+0x2>
 196:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <timer0_millis+0x3>
 19a:	2f bf       	out	0x3f, r18	; 63
 19c:	08 95       	ret

0000019e <main>:
}

void main(void){
	LCD_DATA_DIR = 0xff;
 19e:	8f ef       	ldi	r24, 0xFF	; 255
 1a0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	LCD_CTRL_DIR = 0xff;
 1a4:	84 bb       	out	0x14, r24	; 20
	
	unsigned long t=millis();//º¯¼ö
 1a6:	ef df       	rcall	.-34     	; 0x186 <millis>

	init_lcd();
 1a8:	9d df       	rcall	.-198    	; 0xe4 <init_lcd>
 1aa:	ff cf       	rjmp	.-2      	; 0x1aa <main+0xc>

000001ac <_exit>:
 1ac:	f8 94       	cli

000001ae <__stop_program>:
 1ae:	ff cf       	rjmp	.-2      	; 0x1ae <__stop_program>
